name: Tweet Temperature of Laguna Verde

on:
  schedule:
    - cron: '*/30 * * * *'  # Cada 30 minutos
  workflow_dispatch:  # Permite ejecutarlo manualmente

jobs:
  tweet:
    runs-on: ubuntu-latest
    environment: TWITTER
    steps:
      - name: Debug Secrets
        run: |
          echo "Verificando secretos de Twitter..."
          if [ -z "${{ secrets.TWITTER_ACCESS_TOKEN }}" ]; then echo "❌ TWITTER_ACCESS_TOKEN está vacío"; exit 1; fi
          echo "✅ Todos los secretos están configurados correctamente."

      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Fetch Temperature from API
        id: fetch_temp
        run: |
          API_URL="https://nginx-cms.onrender.com/api/scraper"
          TEMP=$(curl -s "$API_URL" | jq -r '.res.temperature' | xargs)  # Extraer y limpiar temperatura
          if [ -z "$TEMP" ]; then echo "❌ Error: No se pudo obtener la temperatura."; exit 1; fi
          echo "🌡️ Temperatura obtenida: $TEMP"
          echo "TEMP=$TEMP" >> $GITHUB_ENV

      - name: Post Tweet using Twitter API v2 (OAuth 2.0 User Context)
        env:
          TWITTER_ACCESS_TOKEN: ${{ secrets.TWITTER_ACCESS_TOKEN }}
        run: |
          echo "Publicando tweet..."
          echo "🌡️ La temperatura actual en Laguna Verde es de ${TEMP} #LagunaVerde #Clima" > tweet.txt
          
          pip install requests

          python - <<EOF
          import os
          import requests
          import json

          # Usamos el Access Token como Bearer Token (OAuth 2.0 User Context)
          BEARER_TOKEN = os.getenv('TWITTER_ACCESS_TOKEN')

          if not BEARER_TOKEN:
              print("❌ Error: No hay Bearer Token en las credenciales.")
              exit(1)

          # Leer el contenido del tweet
          TWEET_TEXT = open('tweet.txt', 'r').read().strip()

          # Configuración de la API v2
          url = "https://api.twitter.com/2/tweets"
          headers = {
              "Authorization": f"Bearer {BEARER_TOKEN}",
              "Content-Type": "application/json"
          }
          payload = json.dumps({"text": TWEET_TEXT})

          # Hacer el POST a la API de Twitter
          response = requests.post(url, headers=headers, data=payload)

          if response.status_code == 201:
              print("✅ Tweet enviado correctamente:", TWEET_TEXT)
          else:
              print("❌ Error al enviar el tweet:", response.text)
              exit(1)
          EOF
